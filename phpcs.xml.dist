<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PHP_CodeSniffer" xsi:noNamespaceSchemaLocation="phpcs.xsd">

    <rule ref="vendor/ork/phpcs/Ork/ruleset.xml">
        <exclude-pattern>src/Migrations/*</exclude-pattern>

        <!-- don't need @package right now -->
        <exclude name="Ork.Commenting.FileComment.MissingPackageTag" />

        <!-- no. -->
        <exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore" />
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore" />

        <!-- conflicts with PSR12's PSR2.Classes.ClassDeclaration.CloseBraceAfterBody -->
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.AfterLast" />

        <!-- excluding the previous command makes the class look unbalanced -->
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.BeforeFirst" />
        <exclude name="Squiz.WhiteSpace.MemberVarSpacing.FirstIncorrect" />

        <!-- documentation lies -->
        <exclude name="Generic.Commenting.DocComment.MissingShort" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingReturn" />
        <exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing" />

        <!-- leave my comments alone -->
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />
        <exclude name="Squiz.Commenting.InlineComment.NotCapital" />

        <!-- doctrine disagrees -->
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed" />
        <exclude name="Squiz.Commenting.VariableComment.TagNotAllowed" />

        <!-- k -->
        <exclude name="Generic.Files.LineLength.TooLong" />
        <exclude name="Ork.Operators.ComparisonOperatorUsage.ImplicitTrue" />
        <exclude name="Ork.Operators.ComparisonOperatorUsage.NotAllowed" />
        <exclude name="Squiz.PHP.DisallowBooleanStatement.Found" />

        <!-- wtf -->
        <exclude name="PEAR.WhiteSpace.ScopeIndent.IncorrectExact" />
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent" />
    </rule>

    <rule ref="PSR12" />

    <rule ref="Generic.Arrays.ArrayIndent" />

    <file>bin</file>
    <file>src</file>

    <!-- Entities tend to be autogenerated -->
    <rule ref="Ork.Formatting.AlphabeticalMethodNames.OutOfOrder">
        <exclude-pattern>src/Entity/*</exclude-pattern>
    </rule>
    <rule ref="Ork.Formatting.AlphabeticalPropertyNames.OutOfOrder">
        <exclude-pattern>src/Entity/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.Missing">
        <exclude-pattern>src/Entity/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.VariableComment.MissingVar">
        <exclude-pattern>src/Entity/*</exclude-pattern>
    </rule>

    <!-- Inheritance -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClassAfterLastUsed">
        <exclude-pattern>src/Form/*</exclude-pattern>
        <exclude-pattern>src/Security/*</exclude-pattern>
    </rule>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClassBeforeLastUsed">
        <exclude-pattern>src/Security/*</exclude-pattern>
    </rule>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInImplementedInterfaceAfterLastUsed">
        <exclude-pattern>src/Serializer/Normalizer/*</exclude-pattern>
    </rule>

    <!-- k -->
    <rule ref="Generic.Files.LineLength.TooLong">
        <exclude-pattern>src/Kernel.php</exclude-pattern>
    </rule>

    <!-- Symfony Serializer Attributes -->
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeySpecified">
        <exclude-pattern>src/Service/ExportService.php</exclude-pattern>
    </rule>

</ruleset>
